# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    ft_memcpy.txt                                      :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jgermany <nyaritakunai@outlook.com>        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/11/25 11:26:54 by jgermany          #+#    #+#              #
#    Updated: 2022/12/15 13:19:10 by jgermany         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Libft - ft_memcpy 游릭游댮

Evil tests made with 游땓游땓游땓 passion

Context : The memcpy() function copies n bytes from memory area src to
memory area dest.  The memory areas must not overlap.  Use
memmove(3) if the memory areas do overlap.

Test material
	- Array 1 of char of 5 elements or space allocated via malloc
	- Array 2 of char of 5 elements or space allocated via malloc
	- Original memcpy (#include <string.h>) for comparison

[游릭] Happy path
	ft_memcpy(arr2, arr1, 3)
		-> 3 bytes copied from arr2 to arr1

[游릭] Exact size
	ft_memcpy(arr2, arr1, 5)
		-> 5 bytes copied from arr2 to arr1

[游릭] No size
	ft_memcpy(arr2, arr1, 0)
		-> Nothing changes in arr

[游릭] Size too long
	ft_memcpy(arr2, arr1, 10)
		-> Write as much as needed (+ Undefined behavior - *** stack smashing 
		detected ***)
		
[游릭] Invalid memory address;
	ft_memcpy((void *)0, arr1, 1)
		-> Segfault / Undefined behavior
	ft_memcpy(arr2, (void *)0, 1)
		-> Segfault / Undefined behavior
	
[游릭] Overlapping memory address (case (dest > src) and (dest < src))
	ft_memcpy(arr1 + 1, arr1, 3) (dest > src)
		-> Undefined behavior ? (The first byte of arr1 could be copied 3
		times. 1, 2, 3, 4, 5 becomes 1, 1, 1, 1, 5 instead of
		1, 1, 2, 3, 5)
	ft_memcpy(arr1, arr1 + 1, 3) (dest < src)
		-> Content is copied without problems (1, 2, 3, 4, 5 becomes 
		2, 3, 4, 4, 5)
	ft_memcpy(arr1, arr1, 3)
		-> Nothing change. And why should we do anything in the first place?
